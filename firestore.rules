rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Tasks Collection
    match /tasks/{taskId} {
      allow read: if request.auth != null; // Any authenticated user can read tasks
      allow create: if request.auth != null; // Any authenticated user can create tasks
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.posterId; // Only the poster can update/delete their own task
    }

    // Tasker Profiles Collection
    match /taskerProfiles/{userId} {
      allow read: if request.auth != null; // Any authenticated user can read tasker profiles
      allow create, update: if request.auth != null && request.auth.uid == userId; // Only the tasker can create/update their own profile
    }

    // Offers Collection
    match /offers/{offerId} {
      allow create: if request.auth != null; // Any authenticated user can create an offer
      allow read: if request.auth != null && (request.auth.uid == resource.data.taskerId || request.auth.uid == resource.data.clientId); // Only the tasker who made the offer or the client who owns the task can read it
      allow update: if request.auth != null && (
        (request.auth.uid == resource.data.clientId && request.resource.data.status in ['accepted', 'rejected']) || // Client can accept/reject offers
        (request.auth.uid == resource.data.taskerId && request.resource.data.status == 'withdrawn') // Tasker can withdraw their own offer
      );
      allow delete: if false; // Offers cannot be deleted directly
    }

    // Chat Rooms Collection
    match /chatRooms/{roomId} {
      allow create: if request.auth != null; // Any authenticated user can create a chat room
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participants; // Only participants can read/update the chat room (e.g., last message)

      // Messages Subcollection
      match /messages/{messageId} {
        allow create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(roomId)).data.participants; // Only participants can send messages
        allow read: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(roomId)).data.participants; // Only participants can read messages
      }
    }
  }
}