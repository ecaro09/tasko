rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Allow authenticated users to read all tasks
    // Allow task poster to create, update, and delete their own tasks
    match /tasks/{taskId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.posterId;
      allow update: if request.auth != null && request.auth.uid == resource.data.posterId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.posterId;
    }

    // Allow authenticated users to read offers if they are the tasker or the client
    // Allow tasker to create offers
    // Allow tasker or client to update offer status
    match /offers/{offerId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.taskerId || request.auth.uid == resource.data.clientId);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.taskerId;
      allow update: if request.auth != null && (request.auth.uid == resource.data.taskerId || request.auth.uid == resource.data.clientId);
      allow delete: if false; // Offers should generally not be deleted, only withdrawn/rejected
    }

    // Allow authenticated users to read all tasker profiles
    // Allow tasker to create and update their own profile
    match /taskerProfiles/{taskerId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow delete: if false; // Profiles should generally not be deleted via client
    }

    // Chat Rooms:
    // A user can only read/write to a chat room if they are a participant.
    match /chatRooms/{roomId} {
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participants;
      allow create: if request.auth != null && request.auth.uid in request.resource.data.participants;

      // Messages subcollection within a chat room
      match /messages/{messageId} {
        allow read, write: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(roomId)).data.participants;
      }
    }
  }
}