rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Tasks: users can create tasks, read all tasks, but only update their own
    match /tasks/{taskId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.clientId;
      allow update, delete: if request.auth != null 
        && (request.auth.uid == resource.data.clientId 
            || request.auth.uid == resource.data.taskerId);
    }
    
    // Bids: users can create bids for tasks, read bids for their tasks
    match /tasks/{taskId}/bids/{bidId} {
      allow read: if request.auth != null 
        && (request.auth.uid == resource.data.taskerId 
            || request.auth.uid == get(/databases/$(database)/documents/tasks/$(taskId)).data.clientId);
      allow create: if request.auth != null 
        && request.auth.uid == request.resource.data.taskerId
        && request.auth.uid != get(/databases/$(database)/documents/tasks/$(taskId)).data.clientId;
    }
    
    // Payments: users can only read payments they're involved in
    match /payments/{paymentId} {
      allow read: if request.auth != null 
        && (request.auth.uid == resource.data.clientId 
            || request.auth.uid == resource.data.taskerId);
      allow create: if request.auth != null; // Only via Cloud Functions
    }
    
    // Transactions: read-only for admin users
    match /transactions/{transactionId} {
      allow read: if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Earnings summary: admin only
    match /earnings_summary/{document} {
      allow read, write: if request.auth != null 
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}